<?php

namespace {{ namespace }};

use App\Models\Book;
use Illuminate\Http\Request;
use {{ rootNamespace }}Http\Controllers\Controller;
use App\Repository\Student\StudentRepositoryInterface;

class {{ class }} extends Controller
{
    /**
     * ClassController constructor
     * @param App\Repository\Custom\StudentRepositoryInterface $repository
     */
    public function __construct(private StudentRepositoryInterface $repository)
    {
    }

    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
        return Inertia::render('Admin/Books/Index', [
            'books' => $this->repository->index()
        ]);
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        return Inertia::render('Admin/Books/Create',[
            'classes' => app(SchoolClassRepositoryInterface::class)->index()
        ]);
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(Request $request)
    {
        $result = $this->repository->store($request);

        if ($result) {
            return redirect()->route('teacher.assessments.index')->with('success', 'Assessment created successfully.');
        }

        return redirect()->route('teacher.assessments.index')->with('error', serverErrorMessage());
    }

    /**
     * Display the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function show($id)
    {
        return Inertia::render('Teacher/Assessments/Show', [
            'assessment' => new AssessmentResource($assessment->load(['class', 'study_group', 'multiple_choice_questions', 'essay_questions']))
        ]);
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function edit($id)
    {
        //
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request, $id)
    {
        $result = $this->repository->update($request, $assessment);

        if ($result) {
            return redirect()->route('teacher.assessments.show', $assessment)->with('success', 'Assessment updated successfully.');
        }

        return redirect()->route('teacher.assessments.index')->with('error', serverErrorMessage());
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function destroy($id)
    {
        //
    }
}
